{"version":3,"sources":["store/todos.js","store/entities.js","store/reducer.js","store/middleware/logger.js","components/check.jsx","components/delete.jsx","components/todo.jsx","components/check_all.jsx","components/input.jsx","App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["id","slice","createSlice","name","initialState","list","checkAll","value","reducers","todoAdded","todos","action","payload","unshift","check","todoChecked","index","findIndex","todo","filter","length","todoDeleted","todoCheckAll","i","updateInputValue","actions","getTodos","createSelector","state","entities","getTotal","getCheckAll","getValue","combineReducers","todosReducer","entitiesReducer","logger","param","store","next","Check","props","classes","onClick","style","cursor","className","Delete","Todo","dispatch","useDispatch","type","defaultValue","disabled","aria-label","aria-describedby","CheckAll","Input","useSelector","message","total","Fragment","required","placeholder","onChange","val","target","onKeyDown","event","key","map","configureStore","reducer","middleware","getDefaultMiddleware","destination","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"6RAGIA,EAAK,EAEHC,EAAQC,YAAY,CACxBC,KAAM,QACNC,aAAc,CACZC,KAAM,GACNC,UAAU,EACVC,MAAO,IAGTC,SAAU,CACRC,UAAW,SAACC,EAAOC,GACM,UAAnBA,EAAOC,UACTF,EAAML,KAAKQ,QAAQ,CACjBb,KACAc,OAAO,EACPP,MAAOG,EAAMH,QAEfG,EAAMH,MAAQ,GACdP,MAIJe,YAAa,SAACL,EAAOC,GACnB,IAAMK,EAAQN,EAAML,KAAKY,WACvB,SAACC,GAAD,OAAUA,EAAKlB,KAAOW,EAAOC,QAAQM,KAAKlB,MAExCW,EAAOC,QAAQE,MAAOJ,EAAML,KAAKW,GAAOF,OAAQ,EAC/CJ,EAAML,KAAKW,GAAOF,OAAQ,EAEpBJ,EAAML,KAAKc,QAAO,SAACD,GAAD,OAAUA,EAAKJ,SACnCM,SAAWV,EAAML,KAAKe,OAC7BV,EAAMJ,UAAW,EACZI,EAAMJ,UAAW,GAG1Be,YAAa,SAACX,EAAOC,GACnB,IAAMK,EAAQN,EAAML,KAAKY,WACvB,SAACC,GAAD,OAAUA,EAAKlB,KAAOW,EAAOC,QAAQZ,MAEvCU,EAAML,KAAOK,EAAML,KAAKc,QAAO,SAACD,GAAD,OAAUA,IAASR,EAAML,KAAKW,OAG/DM,aAAc,SAACZ,GACb,GAAKA,EAAMJ,SAGJ,CACL,IAAK,IAAIiB,EAAI,EAAGA,EAAIb,EAAML,KAAKe,OAAQG,IAAKb,EAAML,KAAKkB,GAAGT,OAAQ,EAClEJ,EAAMJ,UAAW,MALE,CACnB,IAAK,IAAIiB,EAAI,EAAGA,EAAIb,EAAML,KAAKe,OAAQG,IAAKb,EAAML,KAAKkB,GAAGT,OAAQ,EAClEJ,EAAMJ,UAAW,IAOrBkB,iBAAkB,SAACd,EAAOC,GACxBD,EAAMH,MAAQI,EAAOC,Y,EAWvBX,EAAMwB,QALRhB,E,EAAAA,UACAa,E,EAAAA,aACAP,E,EAAAA,YACAM,E,EAAAA,YACAG,E,EAAAA,iBAGavB,IAAf,QAEayB,EAAWC,aACtB,SAACC,GAAD,OAAWA,EAAMC,SAASnB,SAC1B,SAACA,GAAD,OAAWA,EAAML,KAAKc,QAAO,SAACD,GAAD,OAAUA,QAG5BY,EAAWH,aACtB,SAACC,GAAD,OAAWA,EAAMC,SAASnB,SAC1B,SAACA,GAAD,OAAWA,EAAML,KAAKc,QAAO,SAACD,GAAD,OAAWA,EAAKJ,YAGlCiB,EAAcJ,aACzB,SAACC,GAAD,OAAWA,EAAMC,SAASnB,SAC1B,SAACA,GAAD,OAAWA,EAAMJ,YAGN0B,EAAWL,aACtB,SAACC,GAAD,OAAWA,EAAMC,SAASnB,SAC1B,SAACA,GAAD,OAAWA,EAAMH,SCtFJ0B,cAAgB,CAC7BvB,MAAOwB,ICDMD,cAAgB,CAC7BJ,SAAUM,ICEGC,EALA,SAACC,GAAD,OAAW,SAACC,GAAD,OAAW,SAACC,GAAD,OAAU,SAAC5B,GAC9C,OAAO4B,EAAK5B,O,OCYC6B,G,KAZD,SAACC,GACb,IAAIC,EAAU,qBAEd,OADAA,IAA2B,IAAhBD,EAAM3B,MAAkB,KAAO,GAExC,uBACE6B,QAASF,EAAME,QACfC,MAAO,CAAEC,OAAQ,WACjBC,UAAWJ,MCGFK,EAVA,SAACN,GACd,OACE,uBACEE,QAASF,EAAME,QACfC,MAAO,CAAEC,OAAQ,WACjBC,UAAU,iBCmCDE,EAnCF,SAACP,GACZ,IAAMQ,EAAWC,cAGjB,OACE,yBAAKJ,UAAU,2DACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,6BACb,kBAAC,EAAD,CACEhC,MAAO2B,EAAMvB,KAAKJ,MAClB6B,QAAS,kBACPM,EACElC,EAAY,CAAED,MAAO2B,EAAMvB,KAAKJ,MAAOI,KAAMuB,EAAMvB,aAM7D,2BACEiC,KAAK,OACLL,UAlBQ,gBAmBRM,aAAcX,EAAMlC,MACpB8C,SAAUZ,EAAMvB,KAAKJ,MACrBwC,aAAW,uBACXC,mBAAiB,yBAEnB,yBAAKT,UAAU,sBACb,yBAAKA,UAAU,6BACb,kBAAC,EAAD,CAAQH,QAAS,kBAAMM,EAAS5B,EAAYoB,EAAMvB,cCpB7CsC,EAbE,SAACf,GAChB,IAEIC,GAA0B,IAAhBD,EAAM3B,MAFP,0BACA,mBAEb,OACE,uBACE6B,QAASF,EAAME,QACfC,MAAO,CAAEC,OAAQ,WACjBC,UAAWJ,KCyDFe,EApDD,WACZ,IAAMR,EAAWC,cACXxC,EAAQgD,YAAYhC,GACtBiC,EAAU,SACVC,EAAQF,YAAY5B,GAAUV,OAClCuC,GAAqB,IAAVC,EAAc,kBAAoB,OAASA,EAAQ,eAC9D,IAAMtD,EAAWoD,YAAY3B,GAE7B,OACE,kBAAC,IAAM8B,SAAP,KACE,6BACE,yBAAKf,UAAU,6BACb,wBAAIA,UAAU,6BAAd,SACA,wBAAIA,UAAU,SACd,yBAAKA,UAAU,2DACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,6BACb,kBAAC,EAAD,CACEhC,MAAOR,EACPqC,QAAS,kBAAMM,EAAS3B,UAI9B,2BACEwC,UAAU,EACVX,KAAK,OACL5C,MAAOmD,YAAY1B,GACnB+B,YAAY,8BACZC,SAAU,SAACC,GAAD,OAAShB,EAASzB,EAAiByC,EAAIC,OAAO3D,SACxD4D,UAAW,SAACC,GAAD,OAAWnB,EAASxC,EAAU2D,EAAMC,OAC/CvB,UAAU,eACVQ,aAAW,uBACXC,mBAAiB,0BAGpB7C,EAAM4D,KAAI,SAACpD,GAAD,OACT,kBAAC,EAAD,CACEmD,IAAKnD,EAAKlB,GACVO,MAAOW,EAAKX,MACZO,MAAOI,EAAKJ,MACZI,KAAMA,OAGV,yBAAK4B,UAAU,mDACZa,OCrDPrB,ECDGiC,YAAe,CACpBC,UACAC,WAAW,GAAD,mBAAMC,eAAN,CAA8BtC,EAAO,CAAEuC,YAAa,gBDSnDC,MARf,WACE,OACE,kBAAC,IAAD,CAAUtC,MAAOA,GACf,kBAAC,EAAD,QECcuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMnC,c","file":"static/js/main.8522388a.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { createSelector } from \"reselect\";\r\n\r\nlet id = 0;\r\n\r\nconst slice = createSlice({\r\n  name: \"todos\",\r\n  initialState: {\r\n    list: [],\r\n    checkAll: false,\r\n    value: \"\",\r\n  },\r\n\r\n  reducers: {\r\n    todoAdded: (todos, action) => {\r\n      if (action.payload === \"Enter\") {\r\n        todos.list.unshift({\r\n          id,\r\n          check: false,\r\n          value: todos.value,\r\n        });\r\n        todos.value = \"\";\r\n        id++;\r\n      }\r\n    },\r\n\r\n    todoChecked: (todos, action) => {\r\n      const index = todos.list.findIndex(\r\n        (todo) => todo.id === action.payload.todo.id\r\n      );\r\n      if (action.payload.check) todos.list[index].check = false;\r\n      else todos.list[index].check = true;\r\n\r\n      let list = todos.list.filter((todo) => todo.check);\r\n      if (list.length === todos.list.length) {\r\n        todos.checkAll = true;\r\n      } else todos.checkAll = false;\r\n    },\r\n\r\n    todoDeleted: (todos, action) => {\r\n      const index = todos.list.findIndex(\r\n        (todo) => todo.id === action.payload.id\r\n      );\r\n      todos.list = todos.list.filter((todo) => todo !== todos.list[index]);\r\n    },\r\n\r\n    todoCheckAll: (todos) => {\r\n      if (!todos.checkAll) {\r\n        for (let i = 0; i < todos.list.length; i++) todos.list[i].check = true;\r\n        todos.checkAll = true;\r\n      } else {\r\n        for (let i = 0; i < todos.list.length; i++) todos.list[i].check = false;\r\n        todos.checkAll = false;\r\n      }\r\n    },\r\n\r\n    updateInputValue: (todos, action) => {\r\n      todos.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  todoAdded,\r\n  todoCheckAll,\r\n  todoChecked,\r\n  todoDeleted,\r\n  updateInputValue,\r\n} = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getTodos = createSelector(\r\n  (state) => state.entities.todos,\r\n  (todos) => todos.list.filter((todo) => todo)\r\n);\r\n\r\nexport const getTotal = createSelector(\r\n  (state) => state.entities.todos,\r\n  (todos) => todos.list.filter((todo) => !todo.check)\r\n);\r\n\r\nexport const getCheckAll = createSelector(\r\n  (state) => state.entities.todos,\r\n  (todos) => todos.checkAll\r\n);\r\n\r\nexport const getValue = createSelector(\r\n  (state) => state.entities.todos,\r\n  (todos) => todos.value\r\n);\r\n","import { combineReducers } from \"redux\";\r\nimport todosReducer from \"./todos\";\r\n\r\nexport default combineReducers({\r\n  todos: todosReducer,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport entitiesReducer from \"./entities\";\r\n\r\nexport default combineReducers({\r\n  entities: entitiesReducer,\r\n});\r\n","// SNA\r\nconst logger = (param) => (store) => (next) => (action) => {\r\n  return next(action);\r\n  // logger\r\n};\r\n\r\nexport default logger;\r\n\r\n// Currying\r\n// N => 1\r\n","import React from \"react\";\r\n\r\nconst Check = (props) => {\r\n  let classes = \"fa fa-check-circle\";\r\n  classes += props.check === false ? \"-o\" : \"\";\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Check;\r\n","import React from \"react\";\r\n\r\nconst Delete = (props) => {\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className=\"fa fa-times\"\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Delete;\r\n","import React from \"react\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { todoChecked, todoDeleted } from \"../store/todos\";\r\nimport Check from \"./check\";\r\nimport Delete from \"./delete\";\r\n\r\nconst Todo = (props) => {\r\n  const dispatch = useDispatch();\r\n  let classes = \"form-control \";\r\n\r\n  return (\r\n    <div className=\"md-form input-group input-group-lg p-1 mx-auto col-md-5\">\r\n      <div className=\"input-group-prepend\">\r\n        <div className=\"input-group-text md-addon\">\r\n          <Check\r\n            check={props.todo.check}\r\n            onClick={() =>\r\n              dispatch(\r\n                todoChecked({ check: props.todo.check, todo: props.todo })\r\n              )\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className={classes}\r\n        defaultValue={props.value}\r\n        disabled={props.todo.check}\r\n        aria-label=\"Sizing example input\"\r\n        aria-describedby=\"inputGroup-sizing-lg\"\r\n      />\r\n      <div className=\"input-group-append\">\r\n        <div className=\"input-group-text md-addon\">\r\n          <Delete onClick={() => dispatch(todoDeleted(props.todo))} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\n\r\nconst CheckAll = (props) => {\r\n  let class1 = \"fa fa-angle-double-down\";\r\n  let class2 = \"fa fa-angle-down\";\r\n  let classes = props.check === false ? class1 : class2;\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default CheckAll;\r\n","import React from \"react\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport Todo from \"./todo\";\r\nimport CheckAll from \"./check_all\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getTodos,\r\n  getTotal,\r\n  getCheckAll,\r\n  todoCheckAll,\r\n  getValue,\r\n  updateInputValue,\r\n  todoAdded,\r\n} from \"../store/todos\";\r\n\r\nconst Input = () => {\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector(getTodos);\r\n  let message = \"There \";\r\n  let total = useSelector(getTotal).length;\r\n  message += total === 1 ? \"is 1 task left.\" : \"are \" + total + \" tasks left.\";\r\n  const checkAll = useSelector(getCheckAll);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n          <h1 className=\"text-center m-5 display-1\">TODOS</h1>\r\n          <hr className=\"my-4\"></hr>\r\n          <div className=\"md-form input-group input-group-lg p-1 mx-auto col-md-5\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text md-addon\">\r\n                <CheckAll\r\n                  check={checkAll}\r\n                  onClick={() => dispatch(todoCheckAll())}\r\n                />\r\n              </div>\r\n            </div>\r\n            <input\r\n              required={true}\r\n              type=\"text\"\r\n              value={useSelector(getValue)}\r\n              placeholder=\"Hit enter to add your to-do\"\r\n              onChange={(val) => dispatch(updateInputValue(val.target.value))}\r\n              onKeyDown={(event) => dispatch(todoAdded(event.key))}\r\n              className=\"form-control\"\r\n              aria-label=\"Sizing example input\"\r\n              aria-describedby=\"inputGroup-sizing-lg\"\r\n            />\r\n          </div>\r\n          {todos.map((todo) => (\r\n            <Todo\r\n              key={todo.id}\r\n              value={todo.value}\r\n              check={todo.check}\r\n              todo={todo}\r\n            />\r\n          ))}\r\n          <div className=\" text-center font-weight-bold text-wrap mx-auto\">\r\n            {message}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\nimport Input from \"./components/input\";\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Input />\n    </Provider>\n  );\n}\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport reducer from \"./reducer\";\r\nimport logger from \"./middleware/logger\";\r\n\r\nexport default function () {\r\n  return configureStore({\r\n    reducer,\r\n    middleware: [...getDefaultMiddleware(), logger({ destination: \"console\" })],\r\n  });\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}